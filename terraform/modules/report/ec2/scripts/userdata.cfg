#cloud-config
# https://cloudinit.readthedocs.io/en/latest/index.html

output: {all: '| tee -a /var/log/cloud-init-output.log'}

hostname: ${hostname}

users:
  - name: ubuntu
    gecos: created by terraform
    primary-group: users
    shell: /bin/bash
    sudo: ALL=(ALL) NOPASSWD:ALL
    ssh-authorized-keys:
      - ${ssh_pub_key}
  - name: ansible
    gecos: created by terraform
    primary-group: users
    shell: /bin/bash
    sudo: ALL=(ALL) NOPASSWD:ALL

write_files:
  - path: /root/bootstrap.sh
    permissions: '0700'
    owner: root:root
    content: |
      #!/bin/bash
      # Created by the terraform report module.
      # Designed to bootstrap a host.
      set -eu pipefail
      # Install apt and pip packages
      apt-get update
      apt-get install -y ansible jq python3-pip
      pip3 install --upgrade awscli boto3
      aws configure set default.region ${region}
      # Get the report pullkey from aws ssm which has been 
      # configured as a deploy key in the report playbook repo
      # and only has the ability to pull from the repository.
      # https://github.com/hypothesis/playbook/settings/keys
      aws ssm get-parameter \
        --name "/prod/github/report/pullkey" \
        --with-decryption \
        |jq -r .Parameter.Value \
        |base64 -d > /root/.ssh/pullkey
      # set playbook pull private key permissions and ownership
      chmod 600 /root/.ssh/pullkey
      chown root:root /root/.ssh/pullkey
      # Create a basic ssh config
      cat <<SSHCONFIG >> /root/.ssh/config
      Host github.com
        IdentityFile ~/.ssh/pullkey
        StrictHostKeyChecking no
      SSHCONFIG
      # Clone report repo
      git clone --branch ${git_branch} git@github.com:hypothesis/report /usr/local/share/report
      # Allocate the group `users` access to the report
      chown -R root.users /usr/local/share/report
      chmod -R 775 /usr/local/share/report
      # Provision host with ansible
      /usr/local/share/report/terraform/modules/report/ec2/scripts/provision_with_ansible.sh
      # Run imasync
      /root/venv/bin/python /root/bin/iamsync.py -c /root/iam.yml
runcmd:
 - /root/bootstrap.sh
